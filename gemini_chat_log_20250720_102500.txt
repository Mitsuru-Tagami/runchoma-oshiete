新しい質問ロジック実装計画

**目標:**
るんちょまの質問ロジックを、ユーザーが予測しやすく、よりゲームを楽しめるように改善する。具体的には、「初手『モノとサービス』の分類の次は、質問から数パターンをランダムで。あとは一定の流れで」という質問フローを実装する。

**フェーズ1: 質問ロジックの定義と`questionSelector.js`の改修**

1.  **質問フェーズの定義:**
    *   `INITIAL_PHASE`: 最初の「モノ/サービス/人物・キャラ」選択。
    *   `RANDOM_PHASE`: 初期選択後、一定数の質問をランダムに選択するフェーズ。
    *   `SEQUENTIAL_PHASE`: ランダムフェーズ後、あらかじめ定義された順序で質問を提示するフェーズ。
    *   `CANDIDATE_PHASE`: 候補が絞られた際に提示するフェーズ。
    *   `LEARNING_PHASE`: 特定できなかった場合にユーザーから情報を学習するフェーズ。

2.  **`questionSelector.js`の改修:**
    *   `findNextQuestion`関数を、現在の質問フェーズに応じて適切な質問を選択するように変更。
    *   `questions`配列を、ランダムフェーズ用とシーケンシャルフェーズ用に分類するか、質問オブジェクトにフェーズ情報を追加する。
    *   ランダム質問フェーズ用の質問プールを管理するロジックを追加。
    *   シーケンシャル質問フェーズ用の質問の順番を管理するロジックを追加。
    *   `resetUsedQuestions`関数を、フェーズ切り替え時にも適切にリセットされるように調整。

**フェーズ2: ゲーム状態管理と`gameCore.js`の改修**

1.  **`gameState`への質問フェーズ追加:**
    *   `gameCore.js`の`gameState`オブジェクトに、現在の質問フェーズを保持する変数（例: `currentQuestionPhase`）を追加。初期値は`INITIAL_PHASE`。

2.  **`handleInitialAnswer`の改修:**
    *   初期選択後、`currentQuestionPhase`を`RANDOM_PHASE`に設定し、ランダム質問フェーズを開始する。

3.  **`handleAnswer`の改修:**
    *   `currentQuestionPhase`に応じて、`questionSelector.js`の適切な質問選択ロジックを呼び出す。
    *   `RANDOM_PHASE`から`SEQUENTIAL_PHASE`への切り替えロジックを実装（例: ランダム質問を5問消化したら切り替える）。
    *   `SEQUENTIAL_PHASE`の質問が尽きた場合、または候補が十分に絞られた場合に`CANDIDATE_PHASE`へ移行する。

**フェーズ3: 動作確認と調整**

1.  **各フェーズの動作確認:**
    *   初期選択が正しく機能するか。
    *   ランダム質問が指定された回数だけ表示されるか。
    *   ランダム質問からシーケンシャル質問へ正しく移行するか。
    *   シーケンシャル質問が正しい順序で表示されるか。
    *   候補提示、学習フェーズへの移行が正しく行われるか。
2.  **ユーザー体験の調整:**
    *   各フェーズの質問数や切り替えタイミングを調整し、ゲームのテンポと楽しさを最適化する。

---

現在の作業状況 (2025年7月20日)

*   `main.js`のリファクタリングによるファイル分割は完了。
*   新規登録アイテムの特性保存、重複登録防止、スコアリングロジック、サービスカテゴリ選択時の問題は修正済み。
*   「宅急便」と「にじさんじ」を区別する質問を追加済み。
*   特定完了時のメッセージを変更済み。
*   `ui.js`の構文エラー（`unexpected garbage`、`return not in function`）は、`ui.js`ファイルを再構築することで解消されたはずだが、まだブラウザでの最終確認が必要な状態。
*   `addNewItem`の`ReferenceError`は解消済み。
*   「るんちょまに教える」ボタン押下時の成功メッセージ表示機能を追加済み。
